{"version":3,"sources":["db/page1table1.js","db/page3table1.js","db/page4table1.js","db/page5table1.js","db/page5table2.js","db/page6table1.js","DictionaryTable.js","KanaInput.js","Store.js","InputField.js","ModeSwitch.js","Sidebar.js","styles.js","App.js","Theme.js","serviceWorker.js","index.js"],"names":["page1table1","page3table1","page4table1","page5table1","page5table2","page6table1","DictionaryTable","Container","maxWidth","style","padding","TableContainer","component","Paper","Table","size","TableBody","Object","keys","numbers","map","key","TableRow","TableCell","align","age","years","months","days","dayNames","translateValue","string","type","toRomaji","IMEMode","toHiragana","toKatakana","toKana","KanaInput","value","to","onChange","props","inputRef","useRef","useState","parsedValue","setValue","Fragment","React","cloneElement","children","e","console","log","target","updatedValue","current","defaultProps","StoreContext","createContext","InputField","data","useContext","setData","Grid","container","direction","alignItems","spacing","item","name","inputValue","event","newData","TextField","variant","ModeSwitch","context","FormGroup","row","FormControlLabel","control","Switch","checked","darkMode","setDarkMode","label","useStyles","makeStyles","theme","root","display","hide","drawer","flexShrink","drawerPaper","height","drawerHeader","justifyContent","Sidebar","classes","useTheme","open","setOpen","className","CssBaseline","position","top","IconButton","color","aria-label","onClick","clsx","menuButton","flexDirection","Drawer","anchor","paper","PaperProps","elevation","Divider","List","Children","child","ListItem","styles","width","fill","fontSize","weight","fontWeight","header","paddingTop","pinkColor","correct","backgroundColor","wrong","App","dictionary","language","setLanguage","primaryColor","setPrimaryColor","prefersDarkMode","primary","useMemo","createMuiTheme","palette","main","secondary","random","tonalOffset","Theme","useMediaQuery","today","Date","toLocaleString","weekday","month","day","useEffect","Provider","ThemeProvider","Typography","Button","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"wWAAaA,EAAc,CAAC,EAAK,eAAM,EAAK,SAAK,EAAK,eAAM,EAAK,2BAAQ,EAAK,SAAK,EAAK,eAAM,EAAK,iCAAS,EAAK,eAAM,EAAK,qBAAO,GAAM,qBAAO,GAAM,iCAAS,GAAM,2BAAQ,GAAM,iCAAS,GAAM,+DAAc,GAAM,2BAAQ,GAAM,iCAAS,GAAM,qEAAe,GAAM,iCAAS,GAAM,uCAAU,GAAM,2BAAQ,GAAM,iCAAS,GAAM,iCAAS,GAAM,2BAAQ,GAAM,iCAAS,GAAM,iCAAS,GAAM,iCAAS,GAAM,uCAAU,GAAM,6CAAW,GAAM,6CAAW,GAAM,yDAAa,IAAO,qBAAO,IAAO,2BAAQ,IAAO,iCAAS,IAAO,iCAAS,IAAO,2BAAQ,IAAO,iCAAS,IAAO,iCAAS,IAAO,iCAAS,IAAO,uCAAU,IAAO,qEAAe,IAAQ,eAAM,IAAQ,qBAAO,IAAQ,2BAAQ,IAAQ,2BAAQ,IAAQ,qBAAO,IAAQ,2BAAQ,IAAQ,2BAAQ,IAAQ,2BAAQ,IAAQ,iCAAS,KAAQ,6FAAmB,IAAS,2BAAQ,KAAS,6CAAW,IAAU,iCAAS,KAAU,yDAAa,IAAW,iCAAS,KAAW,qEAAe,IAAY,2BAAQ,KAAY,+DAAc,SAAY,2EAAgB,SAAY,gQCA99BC,EAAc,CAAC,iBAAQ,2BAAQ,iBAAQ,qBAAO,iBAAQ,2BAAQ,iBAAQ,2BAAQ,iBAAQ,qBAAO,iBAAQ,2BAAQ,iBAAQ,2BAAQ,iBAAQ,2BAAQ,iBAAQ,iCAAS,kBAAS,iCAAS,kBAAS,6CAAW,kBAAS,uCAAU,kBAAS,6CAAW,kBAAS,6CAAW,kBAAS,uCAAU,kBAAS,6CAAW,kBAAS,6CAAW,kBAAS,6CAAW,kBAAS,mDAAY,gDAAc,qEAAe,kBAAS,mDAAY,kBAAS,6CAAW,kBAAS,6CAAW,kBAAS,6CAAW,kBAAS,oDCA1dC,EAAc,CAAC,iBAAQ,2BAAQ,iBAAQ,qBAAO,iBAAQ,2BAAQ,iBAAQ,qBAAO,iBAAQ,qBAAO,iBAAQ,2BAAQ,iBAAQ,2BAAQ,iBAAQ,2BAAQ,iBAAQ,iCAAS,kBAAS,kCCAtKC,EAAc,CAAC,mBAAe,2BAAQ,WAAY,qBAAO,aAAc,2BAAQ,oBAAgB,qBAAO,UAAW,qBAAO,eAAgB,2BAAQ,aAAc,2BAAQ,oBAAgB,2BAAQ,oBAAgB,qBAAO,wBAAoB,iCAAS,gBAAiB,6CAAW,qBAAiB,wCCA/RC,EAAc,CAAC,EAAK,2BAAQ,EAAK,qBAAO,EAAK,qBAAO,EAAK,qBAAO,EAAK,qBAAO,EAAK,qBAAO,EAAK,qBAAO,EAAK,gBAAO,EAAK,2BAAQ,GAAM,gBAAO,GAAM,6CAAW,GAAM,uCAAU,GAAM,6CAAW,GAAM,uCAAU,GAAM,uCAAU,GAAM,6CAAW,GAAM,6CAAW,GAAM,6CAAW,GAAM,uCAAU,GAAM,qBAAO,GAAM,mDAAY,GAAM,6CAAW,GAAM,mDAAY,GAAM,6CAAW,GAAM,6CAAW,GAAM,mDAAY,GAAM,mDAAY,GAAM,mDAAY,GAAM,6CAAW,GAAM,6CAAW,GAAM,yDAAa,IAAO,ICArfC,EAAc,CAAC,qBAAO,iCAAS,qBAAO,iCAAS,qBAAO,2BAAQ,qBAAO,iCAAS,qBAAO,iCAAS,qBAAO,iCAAS,qBAAO,4B,OCUrHC,EAAkB,WAE7B,OACE,cAACC,EAAA,EAAD,CACEC,SAAS,KACTC,MAAO,CAAEC,QAAS,QAFpB,SAKE,cAACC,EAAA,EAAD,CACEC,UAAWC,IADb,SAGE,eAACC,EAAA,EAAD,CACEC,KAAK,QADP,UAGE,cAACC,EAAA,EAAD,UAEIC,OAAOC,KAAKC,GAASC,KAAI,SAAAC,GACvB,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACGH,IAEH,cAACE,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACGL,EAAQE,OALEA,QAavB,cAACL,EAAA,EAAD,UAEIC,OAAOC,KAAKO,GAAKL,KAAI,SAAAC,GACnB,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACGH,IAEH,cAACE,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACGC,EAAIJ,OALMA,QAavB,cAACL,EAAA,EAAD,UAEIC,OAAOC,KAAKQ,GAAON,KAAI,SAAAC,GACrB,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACGH,IAEH,cAACE,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACGE,EAAML,OALIA,QAavB,cAACL,EAAA,EAAD,UAEIC,OAAOC,KAAKS,GAAQP,KAAI,SAAAC,GACtB,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACGH,IAEH,cAACE,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACGG,EAAON,OALGA,QAavB,cAACL,EAAA,EAAD,UAEIC,OAAOC,KAAKU,GAAMR,KAAI,SAAAC,GACpB,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACGH,IAEH,cAACE,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACGI,EAAKP,OALKA,QAavB,cAACL,EAAA,EAAD,UAEIC,OAAOC,KAAKW,GAAUT,KAAI,SAAAC,GACxB,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACGH,IAEH,cAACE,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACGK,EAASR,OALCA,gB,iCC7GjC,SAASS,EAAeC,EAAQC,GAC9B,OAAQA,GACN,IAAK,SACH,OAAOC,mBAASF,EAAQ,CAAEG,SAAS,IACrC,IAAK,WACH,OAAOC,qBAAWJ,EAAQ,CAAEG,SAAS,IACvC,IAAK,WACH,OAAOE,qBAAWL,EAAQ,CAAEG,SAAS,IACvC,IAAK,OACL,QACE,OAAOG,iBAAON,EAAQ,CAAEG,SAAS,KAIvC,IAAMI,EAAY,SAAC,GAAiD,EAA/C1B,UAAgD,IAArC2B,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,SAAaC,EAAY,qDAC5DC,EAAWC,iBAAO,MAD0C,EAElCC,mBAASf,EAAeS,EAAOC,IAFG,mBAE3DM,EAF2D,KAE9CC,EAF8C,KAYlE,OACE,cAAC,IAAMC,SAAP,UACGC,IAAMC,aAAaR,EAAMS,SAAU,CAClCR,SAAUA,EACVJ,MAAOO,EACPL,SAde,SAAAW,GACnBC,QAAQC,IAAIF,EAAEG,OAAOhB,OACrB,IAAMiB,EAAe1B,EAAesB,EAAEG,OAAOhB,MAAOC,GACpDO,EAASS,GACTb,EAASc,QAAQlB,MAAQiB,EACzBf,EAASW,SAgBbd,EAAUoB,aAAe,CACvB9C,UAAW,QACXoB,KAAM,OACNO,MAAO,GACPC,GAAI,OACJC,SAAU,SAAAW,GAAC,OAAIA,IAGFd,QC/CTqB,EAAeC,0BCkDNC,EA/CI,WACjB,IAAMC,EAAOC,qBAAWJ,GAAcG,KAChCE,EAAUD,qBAAWJ,GAAcK,QASzC,OACE,cAAC,IAAMhB,SAAP,UACE,eAACiB,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SAEVC,WAAW,SACXC,QAAS,EALX,UAQE,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAAC,EAAD,CAAWC,KAAK,GAAGhC,MAAOuB,EAAKU,WAAY/B,SAjB/B,SAACgC,GAEnB,IAAMC,EAAO,2BAAQZ,GAAR,IAAcU,WAAYC,EAAMlB,OAAOhB,QACpDyB,EAAQU,IAcF,SACE,cAACC,EAAA,EAAD,CACEC,QAAQ,iBAQd,cAACX,EAAA,EAAD,CAAMK,MAAI,U,2BChCZO,EAAa,WACjB,IAAMC,EAAUf,qBAAWJ,GAO3B,OACE,cAACoB,EAAA,EAAD,CAAWC,KAAG,EAAd,SACE,cAACC,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAQC,QAASN,EAAQO,SAAU5C,SAP7B,SAACgC,GACpBK,EAAQQ,YAAYb,EAAMlB,OAAO6B,UAMuCb,KAAK,SACzEgB,MAAM,iB,8FCJRC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,KAAM,CACJD,QAAS,QAEXE,OAAQ,CAENC,WAAY,GAEdC,YAAa,CAEXC,OAAQ,QAEVC,aAAc,CACZN,QAAS,OACTxB,WAAY,SACZ+B,eAAgB,gBAIdC,GAAU,SAAC1D,GACf,IAAM2D,EAAUb,KACVE,EAAQY,cAFW,EAGDrD,IAAMJ,UAAS,GAHd,mBAGlB0D,EAHkB,KAGZC,EAHY,KAazB,OACE,sBAAKC,UAAWJ,EAAQV,KAAxB,UACE,cAACe,EAAA,EAAD,IACA,qBACEjG,MAAO,CACLkG,SAAU,QACVC,IAAK,QAHT,SAME,cAACC,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,cACXC,QApBiB,WACvBR,GAAQ,IAoBFC,UAAWQ,YAAKZ,EAAQa,WAAYX,GAAQF,EAAQR,MAJtD,SAME,qBACEpF,MAAO,CACLmF,QAAS,OACTuB,cAAe,UAHnB,SAME,cAAC,IAAD,UAIN,eAACC,EAAA,EAAD,CACEX,UAAWJ,EAAQP,OACnBlB,QAAQ,aACRyC,OAAO,OACPd,KAAMA,EACNF,QAAS,CACPiB,MAAOjB,EAAQL,aAEjBuB,WAAY,CAAEC,UAAW,GAR3B,UAUE,qBAAKf,UAAWJ,EAAQH,aAAxB,SACE,cAACW,EAAA,EAAD,CAAYG,QAxCM,WACxBR,GAAQ,IAuCF,SACuB,QAApBd,EAAMvB,UAAsB,cAAC,IAAD,IAAsB,cAAC,IAAD,QAGvD,cAACsD,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACGzE,IAAM0E,SAASvG,IAAIsB,EAAMS,UAAU,SAACyE,GACnC,OAAO,cAACC,EAAA,EAAD,UAAWD,gBC1FxBE,GAASrC,aAAW,iBAAO,CAC/BE,KAAM,CACJoC,MAAO,QAETC,KAAM,CACJD,MAAO,QAETxD,KAAM,CACJ0D,SAAU,UAEZ1C,MAAO,CACL0C,SAAU,UAEZC,OAAQ,CACNC,WAAY,KAEdC,OAAQ,CACNC,WAAY,SACZJ,SAAU,UAEZK,UAAW,CACTxB,MAAO,WAETyB,QAAS,CACPC,gBAAiB,UACjB1B,MAAO,SAET2B,MAAO,CACLD,gBAAiB,UACjB1B,MAAO,a,SCuGI4B,OAzHf,WAAe,MAGW7F,mBAAS,CAAE2B,WAAY,UAAWmE,WAAY,KAHzD,mBAGN7E,EAHM,KAGAE,EAHA,OAImBnB,mBAAS,MAJ5B,mBAIN+F,EAJM,KAIIC,EAJJ,OAKmBhG,oBAAS,GAL5B,mBAKNwC,EALM,KAKIC,EALJ,OAM2BzC,mBAAS,WANpC,mBAMNiG,EANM,KAMQC,EANR,KAOP1C,EAAUyB,KACVpC,EClBM,SAACsD,EAAiBC,GAAlB,OAA8BC,mBAC1C,kBACEC,aAAe,CACbC,QAAS,CACPpH,KAAMgH,EAAkB,OAAS,QACjCC,QAAS,CACPI,KAAMJ,GAERK,UAAW,CACTD,KAAM,WAERE,OAAQ,CACNF,KAAM,WAERG,YAAa,QAMb,CAACR,EAAiBC,IDFVQ,CAAMpE,EAAUyD,GACxBE,EAAkBU,YAAc,gCAEhCC,GAAQ,IAAIC,MAAOC,eAAe,QACtC,CAEEC,QAAS,OACTC,MAAO,OACPC,IAAK,YAgCT,OAxBAC,qBAAU,WACR3E,EAAY0D,KAgBX,CAACA,IAQF,cAAC,IAAMhG,SAAP,UACE,cAACW,EAAauG,SAAd,CACE3H,MAAO,CAAEuB,OAAME,UAAS4E,WAAUvD,WAAUC,cAAauD,cAAaE,mBADxE,SAEE,eAACoB,EAAA,EAAD,CAAezE,MAAOA,EAAtB,UACE,cAACgB,EAAA,EAAD,IACA,eAACnG,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACK,EAAA,EAAD,UACE,eAACoD,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SAEVC,WAAW,SACXC,QAAS,EALX,UAOE,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAAC8F,EAAA,EAAD,CAAYxF,QAAQ,KAApB,SACG+E,MAGL,cAAClC,EAAA,EAAD,CACEhH,MAAO,CAAEsH,MAAO,MAAO9B,OAAQ,SAIjC,cAAChC,EAAA,EAAD,CAAMK,MAAI,IAGV,cAACL,EAAA,EAAD,CAAMK,MAAI,EAAV,SAEE,cAAC,EAAD,MAGF,cAACL,EAAA,EAAD,CAAMK,MAAI,EAAV,SAEE,cAAC+F,EAAA,EAAD,CACEzF,QAAQ,YACR7D,KAAK,QACLiG,QAAS,kBAAM3D,QAAQC,IAAIQ,IAH7B,qBAQF,cAACG,EAAA,EAAD,CAAMK,MAAI,EAAV,SAEE,cAAC+F,EAAA,EAAD,CACEzF,QAAQ,YACRyB,QAAS,CAAEV,KAAMU,EAAQkC,SACzBxH,KAAK,QACLiG,QAAS,kBAAMhD,EAAQ,CAAEQ,WAAY,MAJvC,0BAWN,cAAC,EAAD,OAEF,cAAC,GAAD,UAEE,cAAC,EAAD,cE7GQ8F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlI,QAAQkI,MAAMA,EAAMC,c","file":"static/js/main.5141baf4.chunk.js","sourcesContent":["export const page1table1 = {\"1\": \"いち\", \"2\": \"に\", \"3\": \"さん\", \"4\": \"よん・し\", \"5\": \"ご\", \"6\": \"ろく\", \"7\": \"なな・しち\", \"8\": \"はち\", \"9\": \"きゅう\", \"10\": \"じゅう\", \"11\": \"じゅういち\", \"12\": \"じゅうに\", \"13\": \"じゅうさん\", \"14\": \"じゅうよん・じゅうし\", \"15\": \"じゅうご\", \"16\": \"じゅうろく\", \"17\": \"じゅうなな・じゅうしち\", \"18\": \"じゅうはち\", \"19\": \"じゅうきゅう\", \"20\": \"にじゅう\", \"30\": \"さんじゅう\", \"40\": \"よんじゅう\", \"50\": \"ごじゅう\", \"60\": \"ろくじゅう\", \"70\": \"ななじゅう\", \"80\": \"はちじゅう\", \"90\": \"きゅうじゅう\", \"46\": \"よんじゅうろく\", \"87\": \"はちじゅうなな\", \"99\": \"きゅうじゅうきゅう\", \"100\": \"ひゃく\", \"200\": \"にひゃく\", \"300\": \"さんびゃく\", \"400\": \"よんひゃく\", \"500\": \"ごひゃく\", \"600\": \"ろっぴゃく\", \"700\": \"ななひゃく\", \"800\": \"はっぴゃく\", \"900\": \"きゅうひゃく\", \"765\": \"ななひゃくろくじゅうご\", \"1000\": \"せん\", \"2000\": \"にせん\", \"3000\": \"さんぜん\", \"4000\": \"よんせん\", \"5000\": \"ごせん\", \"6000\": \"ろくせん\", \"7000\": \"ななせん\", \"8000\": \"はっせん\", \"9000\": \"きゅうせん\", \"4970\": \"よんせんきゅうひゃくななじゅう\", \"10000\": \"いちまん\", \"65000\": \"ろくまんごせん\", \"100000\": \"じゅうまん\", \"460000\": \"よんじゅうろくまん\", \"1000000\": \"ひゃくまん\", \"6500000\": \"ろっぴゃくごじゅうまん\", \"10000000\": \"せんまん\", \"54000000\": \"ごせにょんひゃくまん\", \"40000065\": \"よんせんまんろくじゅうご\", \"99999999\": \"きゅうせんきゅうひゃくきゅうじゅうきゅうまんきゅうせんきゅうひゃくきゅうじゅうきゅう\"}","export const page3table1 = {\"1 さい\": \"いっさい\", \"2 さい\": \"にさい\", \"3 さい\": \"さんさい\", \"4 さい\": \"よんさい\", \"5 さい\": \"ごさい\", \"6 さい\": \"ろくさい\", \"7 さい\": \"ななさい\", \"8 さい\": \"はっさい\", \"9 さい\": \"きゅうさい\", \"10 さい\": \"じゅっさい\", \"11 さい\": \"じゅういっさい\", \"12 さい\": \"じゅうにさい\", \"13 さい\": \"じゅうさんさい\", \"14 さい\": \"じゅうよんさい\", \"15 さい\": \"じゅうごさい\", \"16 さい\": \"じゅうろくさい\", \"17 さい\": \"じゅうななさい\", \"18 さい\": \"じゅうはっさい\", \"19 さい\": \"じゅうきゅうさい\", \"20 さい（はたち）\": \"にじゅっさい（はたち）\", \"21 さい\": \"にじゅういっさい\", \"30 さい\": \"さんじゅっさい\", \"40 さい\": \"よんじゅっさい\", \"80 さい\": \"はちじゅっさい\", \"90 さい\": \"きゅうじゅっさい\"}","export const page4table1 = {\"1 ねん\": \"いちねん\", \"2 ねん\": \"にねん\", \"3 ねん\": \"さんねん\", \"4 ねん\": \"よねん\", \"5 ねん\": \"ごねん\", \"6 ねん\": \"ろくねん\", \"7 ねん\": \"ななねん\", \"8 ねん\": \"はちねん\", \"9 ねん\": \"きゅうねん\", \"10 ねん\": \"じゅうねん\"}","export const page5table1 = {\"1 (styczeń)\": \"いちがつ\", \"2 (luty)\": \"にがつ\", \"3 (marzec)\": \"さんがつ\", \"4 (kwiecień)\": \"しがつ\", \"5 (maj)\": \"ごがつ\", \"6 (czerwiec)\": \"ろくがつ\", \"7 (lipiec)\": \"しちがつ\", \"8 (sierpień)\": \"はちがつ\", \"9 (wrzesień)\": \"くがつ\", \"10 (październik)\": \"じゅうがつ\", \"11 (listopad)\": \"じゅういちがつ\", \"12 (grudzień)\": \"じゅうにがつ\"}","export const page5table2 = {\"1\": \"ついたち\", \"2\": \"ふつか\", \"3\": \"みっか\", \"4\": \"よっか\", \"5\": \"いつか\", \"6\": \"むいか\", \"7\": \"なのか\", \"8\": \"yōか\", \"9\": \"ここのか\", \"10\": \"tōか\", \"11\": \"じゅういちにち\", \"12\": \"じゅうににち\", \"13\": \"じゅうさんにち\", \"14\": \"じゅうよっか\", \"15\": \"じゅうごにち\", \"16\": \"じゅうろくにち\", \"17\": \"じゅうななにち\", \"18\": \"じゅうはちにち\", \"19\": \"じゅうくにち\", \"20\": \"はつか\", \"21\": \"にじゅういちにち\", \"22\": \"にじゅうににち\", \"23\": \"にじゅうさんにち\", \"24\": \"にじゅうよっか\", \"25\": \"にじゅうごにち\", \"26\": \"にじゅうろくにち\", \"27\": \"にじゅうななにち\", \"28\": \"にじゅうはちにち\", \"29\": \"にじゅうくにち\", \"30\": \"さんじゅうにち\", \"31\": \"さんじゅういちにち\", \"nan\": \"\"}","export const page6table1 = {\"日曜日\": \"にちようび\", \"月曜日\": \"げつようび\", \"火曜日\": \"かようび\", \"水曜日\": \"すいようび\", \"木曜日\": \"もくようび\", \"金曜日\": \"きんようび\", \"土曜日\": \"どようび\"}","import { Container, Paper, Table, TableBody, TableCell, TableContainer, TableRow } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { page1table1 as numbers } from './db/page1table1'\r\nimport { page3table1 as age } from './db/page3table1'\r\nimport { page4table1 as years } from './db/page4table1'\r\nimport { page5table1 as months } from './db/page5table1'\r\nimport { page5table2 as days } from './db/page5table2'\r\nimport { page6table1 as dayNames } from './db/page6table1'\r\n\r\n\r\nexport const DictionaryTable = () => {\r\n\r\n  return (\r\n    <Container\r\n      maxWidth=\"xs\"\r\n      style={{ padding: \"50px\" }}\r\n\r\n    >\r\n      <TableContainer\r\n        component={Paper}\r\n      >\r\n        <Table\r\n          size=\"small\"\r\n        >\r\n          <TableBody>\r\n            {\r\n              Object.keys(numbers).map(key => {\r\n                return (\r\n                  <TableRow key={key}>\r\n                    <TableCell align='center'>\r\n                      {key}\r\n                    </TableCell>\r\n                    <TableCell align='center'>\r\n                      {numbers[key]}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })\r\n            }\r\n          </TableBody>\r\n\r\n          <TableBody>\r\n            {\r\n              Object.keys(age).map(key => {\r\n                return (\r\n                  <TableRow key={key}>\r\n                    <TableCell align='center'>\r\n                      {key}\r\n                    </TableCell>\r\n                    <TableCell align='center'>\r\n                      {age[key]}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })\r\n            }\r\n          </TableBody>\r\n\r\n          <TableBody>\r\n            {\r\n              Object.keys(years).map(key => {\r\n                return (\r\n                  <TableRow key={key}>\r\n                    <TableCell align='center'>\r\n                      {key}\r\n                    </TableCell>\r\n                    <TableCell align='center'>\r\n                      {years[key]}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })\r\n            }\r\n          </TableBody>\r\n\r\n          <TableBody>\r\n            {\r\n              Object.keys(months).map(key => {\r\n                return (\r\n                  <TableRow key={key}>\r\n                    <TableCell align='center'>\r\n                      {key}\r\n                    </TableCell>\r\n                    <TableCell align='center'>\r\n                      {months[key]}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })\r\n            }\r\n          </TableBody>\r\n\r\n          <TableBody>\r\n            {\r\n              Object.keys(days).map(key => {\r\n                return (\r\n                  <TableRow key={key}>\r\n                    <TableCell align='center'>\r\n                      {key}\r\n                    </TableCell>\r\n                    <TableCell align='center'>\r\n                      {days[key]}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })\r\n            }\r\n          </TableBody>\r\n\r\n          <TableBody>\r\n            {\r\n              Object.keys(dayNames).map(key => {\r\n                return (\r\n                  <TableRow key={key}>\r\n                    <TableCell align='center'>\r\n                      {key}\r\n                    </TableCell>\r\n                    <TableCell align='center'>\r\n                      {dayNames[key]}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Container>\r\n\r\n  )\r\n}","import React, { useState, useRef } from 'react';\r\nimport { toKana, toRomaji, toHiragana, toKatakana } from 'wanakana';\r\n\r\n// Need IMEMode option to handle single kana characters like ん and い\r\nfunction translateValue(string, type) {\r\n  switch (type) {\r\n    case 'romaji':\r\n      return toRomaji(string, { IMEMode: true });\r\n    case 'hiragana':\r\n      return toHiragana(string, { IMEMode: true });\r\n    case 'katakana':\r\n      return toKatakana(string, { IMEMode: true });\r\n    case 'kana':\r\n    default:\r\n      return toKana(string, { IMEMode: true });\r\n  }\r\n}\r\n\r\nconst KanaInput = ({ component, value, to, onChange, ...props }) => {\r\n  const inputRef = useRef(null);\r\n  const [parsedValue, setValue] = useState(translateValue(value, to));\r\n  const handleChange = e => {\r\n    console.log(e.target.value)\r\n    const updatedValue = translateValue(e.target.value, to);\r\n    setValue(updatedValue);\r\n    inputRef.current.value = updatedValue;\r\n    onChange(e);\r\n  };\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {React.cloneElement(props.children, {\r\n        inputRef: inputRef,\r\n        value: parsedValue,\r\n        onChange: handleChange,\r\n      })}\r\n    </React.Fragment>\r\n  )\r\n\r\n};\r\n\r\nKanaInput.defaultProps = {\r\n  component: 'input',\r\n  type: 'text',\r\n  value: '',\r\n  to: 'kana',\r\n  onChange: e => e,\r\n};\r\n\r\nexport default KanaInput;","\r\nimport { createContext } from 'react';\r\n\r\nconst StoreContext = createContext();\r\n\r\nexport { StoreContext }\r\n","import { Grid, TextField } from \"@material-ui/core\";\r\nimport React, { useContext } from 'react';\r\nimport KanaInput from \"./KanaInput\";\r\nimport { StoreContext } from \"./Store\";\r\n\r\n\r\nconst InputField = () => {\r\n  const data = useContext(StoreContext).data\r\n  const setData = useContext(StoreContext).setData\r\n\r\n  // console.log(data, setData)\r\n  const inputChange = (event) => {\r\n    // console.log(data)\r\n    const newData = { ...data, inputValue: event.target.value }\r\n    setData(newData);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        // justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n\r\n        <Grid item>\r\n          <KanaInput name=\"\" value={data.inputValue} onChange={inputChange}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n            // value={data.inputValue}\r\n            // onChange={inputChange}\r\n            >\r\n            </TextField>\r\n          </KanaInput>\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          {/* <KanaInput\r\n            name=\"\"\r\n            value={data.inputValue}\r\n            onChange={inputChange}>\r\n            <input></input>\r\n          </KanaInput> */}\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </React.Fragment>\r\n\r\n  )\r\n}\r\n\r\nexport default InputField","import React, { useContext } from 'react';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { StoreContext } from './Store';\r\n\r\nconst ModeSwitch = () => {\r\n  const context = useContext(StoreContext)\r\n\r\n\r\n  const handleChange = (event) => {\r\n    context.setDarkMode(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={<Switch checked={context.darkMode} onChange={handleChange} name=\"dark\" />}\r\n        label=\"Dark mode\"\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\nexport { ModeSwitch }","import CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\n\r\n// const drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    // width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    // width: drawerWidth,\r\n    height: \"auto\",\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst Sidebar = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"1rem\",\r\n        }}\r\n      >\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={handleDrawerOpen}\r\n          className={clsx(classes.menuButton, open && classes.hide)}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <ChevronRightIcon />\r\n          </div>\r\n        </IconButton>\r\n      </div>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        PaperProps={{ elevation: 5 }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {React.Children.map(props.children, (child) => {\r\n            return <ListItem>{child}</ListItem>;\r\n          })}\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\nexport { Sidebar };\r\n\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst styles = makeStyles(() => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  fill: {\r\n    width: '100%',\r\n  },\r\n  name: {\r\n    fontSize: '1.6rem',\r\n  },\r\n  label: {\r\n    fontSize: '1.2rem',\r\n  },\r\n  weight: {\r\n    fontWeight: 100,\r\n  },\r\n  header: {\r\n    paddingTop: '1.5rem',\r\n    fontSize: '1.2rem'\r\n  },\r\n  pinkColor: {\r\n    color: 'hotpink'\r\n  },\r\n  correct: {\r\n    backgroundColor: '#4caf50',\r\n    color: 'white'\r\n  },\r\n  wrong: {\r\n    backgroundColor: '#ab003c',\r\n    color: 'white'\r\n\r\n\r\n  }\r\n\r\n}));\r\n\r\nexport { styles }","import { Button, CssBaseline, Divider, Grid, Paper, Typography, useMediaQuery } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport { DictionaryTable } from './DictionaryTable';\r\nimport InputField from './InputField';\r\nimport { ModeSwitch } from './ModeSwitch';\r\nimport { Sidebar } from './Sidebar';\r\nimport { StoreContext } from './Store';\r\nimport { styles } from './styles';\r\nimport { Theme } from './Theme';\r\n\r\nfunction App() {\r\n  // const [error, setError] = useState(null);\r\n  // const [isLoaded, setIsLoaded] = useState(false);\r\n  const [data, setData] = useState({ inputValue: 'trololo', dictionary: {} });\r\n  const [language, setLanguage] = useState('en');\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [primaryColor, setPrimaryColor] = useState('#e91e63');\r\n  const classes = styles();\r\n  const theme = Theme(darkMode, primaryColor);\r\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n\r\n  const today = new Date().toLocaleString('ja-JP',\r\n    {\r\n      // year: 'numeric',\r\n      weekday: 'long',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    })\r\n\r\n\r\n  const dictionary = {}\r\n\r\n\r\n  // check prefered user mode \r\n  useEffect(() => {\r\n    setDarkMode(prefersDarkMode)\r\n\r\n    //not needed right now\r\n    //   fetch(\"/cv/db.json\")\r\n    //     // fetch(\"http://localhost:3333/data\")\r\n    //     .then(response => response.json())\r\n    //     .then(\r\n    //       (result) => {\r\n    //         setData(result);\r\n    //         setIsLoaded(true);\r\n    //       },\r\n    //       (error) => {\r\n    //         setError(error);\r\n    //         setIsLoaded(true);\r\n    //       }\r\n    //     )\r\n  }, [prefersDarkMode])\r\n\r\n  // if (error) {\r\n  //   return <div>Error: {error.message}</div>;\r\n  // } else if (!isLoaded) {\r\n  //   return <div>Loading...</div>;\r\n  // } else {\r\n  return (\r\n    <React.Fragment>\r\n      <StoreContext.Provider\r\n        value={{ data, setData, language, darkMode, setDarkMode, setLanguage, setPrimaryColor }}>\r\n        <ThemeProvider theme={theme}>\r\n          <CssBaseline />\r\n          <Container maxWidth=\"md\">\r\n            <Paper>\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                // justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"h3\">\r\n                    {today}\r\n                  </Typography>\r\n                </Grid>\r\n                <Divider\r\n                  style={{ width: \"90%\", height: \"1px\" }}\r\n                >\r\n\r\n                </Divider>\r\n                <Grid item>\r\n\r\n                </Grid>\r\n                <Grid item>\r\n\r\n                  <InputField>\r\n                  </InputField>\r\n                </Grid>\r\n                <Grid item>\r\n\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    onClick={() => console.log(data)}\r\n                  >\r\n                    Check\r\n                </Button>\r\n                </Grid>\r\n                <Grid item>\r\n\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    classes={{ root: classes.correct }}\r\n                    size=\"large\"\r\n                    onClick={() => setData({ inputValue: '' })}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n            <DictionaryTable></DictionaryTable>\r\n          </Container>\r\n          <Sidebar>\r\n\r\n            <ModeSwitch />\r\n          </Sidebar>\r\n        </ThemeProvider>\r\n      </StoreContext.Provider>\r\n    </React.Fragment >\r\n\r\n\r\n  )\r\n  // }\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","import { createMuiTheme } from \"@material-ui/core\"\r\nimport { useMemo } from \"react\"\r\n\r\nconst Theme = (prefersDarkMode, primary) => useMemo(\r\n  () =>\r\n    createMuiTheme({\r\n      palette: {\r\n        type: prefersDarkMode ? 'dark' : 'light',\r\n        primary: {\r\n          main: primary, //'#e91e63'\r\n        },\r\n        secondary: {\r\n          main: '#2962ff',\r\n        },\r\n        random: {\r\n          main: '#4caf50',\r\n        },\r\n        tonalOffset: 0.2,\r\n\r\n\r\n\r\n\r\n      },\r\n    }), [prefersDarkMode, primary],\r\n);\r\n\r\nexport { Theme }\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}