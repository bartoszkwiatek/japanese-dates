{"version":3,"sources":["Store.js","styles.js","PersonalInfo.js","Languages.js","SkillChart.js","MainInfo.js","ProjectCard.js","Projects.js","TabPanel.js","formatDate.js","Education.js","Experience.js","TabsInfo.js","ModeSwitch.js","App.js","Theme.js","serviceWorker.js","index.js"],"names":["StoreContext","createContext","styles","makeStyles","root","width","fill","name","fontSize","label","weight","fontWeight","header","paddingTop","pinkColor","color","Profiles","props","profiles","profilesArray","map","profile","index","ListItem","key","dense","Link","href","url","network","Fragment","PersonalInfo","context","useContext","basics","data","language","classes","List","className","divider","ListItemAvatar","style","paddingRight","Avatar","src","height","console","log","ListItemText","primary","secondary","summary","website","email","phone","Languages","languages","item","Typography","padBot","Grid","container","justify","spacing","wrap","Divider","orientation","scale","level","gridItem","fluency","borderColor","SkillChart","theme","useTheme","canvasRef","useRef","skillLabels","skills","skill","filter","skillLevels","useEffect","palette","main","Chart","defaults","global","defaultFontColor","text","defaultFontFamily","current","type","options","responsive","angleLines","display","ticks","suggestedMin","suggestedMax","legend","position","fontColor","contrastText","title","maintainAspectRatio","aspectRatio","tooltips","callbacks","tooltipItem","labels","datasets","backgroundColor","ref","MainInfo","Paper","xs","md","align","variantMapping","h3","Tooltip","Box","margin","ProjectCard","Card","CardMedia","component","alt","image","imgUrl","CardContent","gutterBottom","variant","description","flexwrap","keywords","keyword","Chip","CardActions","Button","size","demoUrl","target","disabled","codeUrl","Projects","padding","projects","project","sm","img","demo","code","TabPanel","children","value","other","role","hidden","id","p","formatDate","date","Date","toLocaleDateString","year","month","useStyles","flexDirection","alignItems","Education","education","school","ExpansionPanel","ExpansionPanelSummary","content","expandIcon","aria-controls","startDate","endDate","area","studyType","ExpansionPanelDetails","institution","desc","courses","point","expanded","marginBottom","Experience","work","job","company","highlights","TabsInfo","useState","setValue","colors","Container","maxWidth","square","Tabs","onChange","event","newValue","setPrimaryColor","indicatorColor","textColor","centered","Tab","icon","axis","direction","onChangeIndex","dir","ModeSwitch","FormGroup","row","FormControlLabel","control","Switch","checked","darkMode","setDarkMode","App","error","setError","isLoaded","setIsLoaded","setData","setLanguage","primaryColor","prefersDarkMode","useMemo","createMuiTheme","tonalOffset","Theme","useMediaQuery","fetch","then","response","json","result","message","Provider","ThemeProvider","CssBaseline","fixed","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.799f89bc.chunk.js","sourcesContent":["\r\nimport { createContext } from 'react';\r\n\r\nconst StoreContext = createContext();\r\n\r\nexport { StoreContext }\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst styles = makeStyles(() => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    fill: {\r\n        width: '100%',\r\n    },\r\n    name: {\r\n        fontSize: '1.6rem',\r\n    },\r\n    label: {\r\n        fontSize: '1.2rem',\r\n    },\r\n    weight: {\r\n        fontWeight: 100,\r\n    },\r\n    header: {\r\n        paddingTop: '1.5rem',\r\n        fontSize: '1.2rem'\r\n    },\r\n    pinkColor: {\r\n        color: 'hotpink'\r\n    }\r\n\r\n}));\r\n\r\nexport { styles }","import React, { useContext } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Link } from '@material-ui/core';\r\nimport { StoreContext } from './Store';\r\nimport { styles } from './styles';\r\n\r\nconst Profiles = (props) => {\r\n    const profiles = props.profilesArray.map((profile, index) =>\r\n        <ListItem key={index} dense>\r\n            <Link color='primary' href={profile.url}>{profile.network}</Link>\r\n        </ListItem>\r\n    );\r\n    return (\r\n        <React.Fragment>\r\n            {profiles}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst PersonalInfo = () => {\r\n    const context = useContext(StoreContext)\r\n    const basics = context.data[context.language].basics\r\n    const classes = styles();\r\n\r\n    return (\r\n        <List className={classes.root}>\r\n            <ListItem divider>\r\n                <ListItemAvatar style={{ paddingRight: '1rem' }}>\r\n                    <Avatar src={``} style={{ height: '6rem', width: '6rem' }}>\r\n                    </Avatar>\r\n                </ListItemAvatar>\r\n                {console.log(basics.name)}\r\n                <ListItemText classes={{\r\n                    primary: classes.name,\r\n                    secondary: classes.label\r\n                }} primary={basics.name} secondary={basics.label} />\r\n            </ListItem>\r\n            <ListItem dense >\r\n                <ListItemText primary=\"About me\" secondary={basics.summary} />\r\n            </ListItem>\r\n            <ListItem dense >\r\n                <Link fontWeight=\"300\" href={basics.website} >{basics.website}</Link>\r\n            </ListItem>\r\n            <ListItem dense >\r\n                <ListItemText primary=\"E-mail:\" secondary={basics.email} />\r\n            </ListItem>\r\n            <ListItem dense >\r\n                <ListItemText primary=\"Phone\" secondary={basics.phone} />\r\n            </ListItem>\r\n            <Profiles profilesArray={basics.profiles} />\r\n        </List >\r\n    );\r\n}\r\n\r\nexport { PersonalInfo }","import React, { useContext } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { Typography, Grid, Divider } from '@material-ui/core';\r\nimport { StoreContext } from './Store';\r\nimport { styles } from './styles';\r\n\r\nconst Languages = () => {\r\n    const classes = styles();\r\n    const context = useContext(StoreContext)\r\n\r\n    const languages = context.data[context.language].languages.map((item, index) =>\r\n        <List key={index}>\r\n\r\n            <ListItem >\r\n                <Typography >\r\n                    {item.language}\r\n                </Typography>\r\n            </ListItem>\r\n            <ListItem className={classes.padBot}>\r\n                <Grid\r\n                    container\r\n                    justify='space-between'\r\n                    spacing={1}\r\n                    wrap='nowrap'\r\n                >\r\n                    <Grid>\r\n                        <Divider orientation='vertical'></Divider>\r\n                    </Grid>\r\n                    {item.scale.map((level, index) => {\r\n                        let gridItem\r\n                        if (index <= item.fluency) {\r\n                            gridItem = (\r\n                                <Grid item className={classes.borderColor}>\r\n                                    <Typography color='primary'>{level}</Typography>\r\n                                </Grid>\r\n                            )\r\n                        } else {\r\n                            gridItem = (\r\n                                <Grid item className={classes.borderColor}>\r\n                                    <Typography className={classes.weight}>{level}</Typography>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                        return (\r\n                            <React.Fragment key={index}>\r\n                                {gridItem}\r\n                                <Grid>\r\n                                    <Divider orientation='vertical'></Divider>\r\n                                </Grid>\r\n                            </React.Fragment>\r\n                        )\r\n                    }\r\n                    )}\r\n                </Grid>\r\n            </ListItem>\r\n        </List >\r\n\r\n    );\r\n    return (\r\n        <React.Fragment>\r\n            <List className={classes.root}>\r\n                {languages}\r\n            </List >\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport { Languages }","import React, { useContext, useRef, useEffect } from 'react'\r\nimport Chart from 'chart.js'\r\nimport { StoreContext } from './Store';\r\nimport { useTheme } from '@material-ui/core';\r\n\r\nconst SkillChart = () => {\r\n  const theme = useTheme();\r\n  const canvasRef = useRef();\r\n  const context = useContext(StoreContext)\r\n\r\n  const skillLabels = context.data[context.language].skills\r\n    .map(skill => skill.name)\r\n    .filter(skill => skill !== 'Others')\r\n  const skillLevels = context.data[context.language].skills\r\n    .map(skill => skill.level)\r\n    .filter(skill => !!skill)\r\n\r\n  console.log(skillLabels)\r\n  console.log(skillLevels)\r\n  useEffect(() => {\r\n    console.log(theme.palette.main);\r\n    Chart.defaults.global.defaultFontColor = theme.palette.text.primary;\r\n    Chart.defaults.global.defaultFontFamily = \"Roboto\";\r\n\r\n    new Chart(canvasRef.current, {\r\n      type: 'radar',\r\n      options: {\r\n        responsive: true,\r\n        scale: {\r\n          angleLines: {\r\n            display: false\r\n          },\r\n          ticks: {\r\n            suggestedMin: 0,\r\n            suggestedMax: 70\r\n          },\r\n        },\r\n        legend: {\r\n          position: 'bottom',\r\n          fontColor: theme.palette.primary.contrastText,\r\n\r\n        },\r\n        title: {\r\n\r\n          fontColor: theme.palette.primary.contrastText,\r\n        },\r\n        maintainAspectRatio: true,\r\n        aspectRatio: 1,\r\n        tooltips: {\r\n          callbacks: {\r\n            title: function (tooltipItem, data) {\r\n              return data['labels'][tooltipItem[0]['index']];\r\n            },\r\n            label: function (tooltipItem, data) {\r\n              return data['datasets'][0]['data'][tooltipItem['index']] + '/100';\r\n            },\r\n          },\r\n        },\r\n      },\r\n      data: {\r\n        labels: skillLabels,\r\n        datasets: [{\r\n          label: 'Current skill levels',\r\n          data: skillLevels,\r\n          backgroundColor: theme.palette.primary.main,\r\n          borderColor: theme.palette.primary.main,\r\n          fill: false\r\n\r\n        }]\r\n      }\r\n    }, [theme])\r\n  });\r\n\r\n  return <canvas style={{ width: '100%' }} ref={canvasRef} />;\r\n}\r\n\r\nexport { SkillChart }","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { PersonalInfo } from './PersonalInfo';\r\nimport { Languages } from './Languages';\r\nimport { SkillChart } from './SkillChart';\r\nimport { Box, Tooltip } from '@material-ui/core';\r\nimport { styles } from './styles';\r\n\r\nconst MainInfo = () => {\r\n  const classes = styles()\r\n  return (\r\n    <Paper >\r\n      <Grid container spacing={5}>\r\n        <Grid item xs={12} md={4} align=\"center\">\r\n          <PersonalInfo />\r\n        </Grid>\r\n        <Grid item xs={12} md={4} align=\"center\">\r\n          <Typography className={classes.header} variantMapping={{ h3: \"h3\" }}>Languages</Typography>\r\n\r\n          <Languages />\r\n        </Grid>\r\n        <Grid item xs={12} md={4} align=\"center\">\r\n          <Typography className={classes.header} variantMapping={{ h3: \"h3\" }}>Skills</Typography>\r\n          <Tooltip\r\n            title=\"I am aware that putting some numerical values to skills is not really making much sense. I think about it as 'Subjective assessment of my own skills in relation to each other'. To be honest I added it beacause radar chart looks cool there.\">\r\n            <Box style={{ margin: '1rem' }}>\r\n\r\n              <SkillChart />\r\n            </Box>\r\n          </Tooltip>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n// }\r\n\r\nexport { MainInfo }\r\n","import React from 'react';\r\nimport { Card, CardMedia, CardContent, Typography, Button, CardActions, Chip, Grid } from '@material-ui/core';\r\n\r\nconst ProjectCard = (props) => {\r\n  return (\r\n    <Card className={'card'}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        alt=\"Screenshot of project\"\r\n        height=\"100\"\r\n        image={'/cv/' + props.imgUrl}\r\n        title={props.title}\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {props.title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {props.description}\r\n        </Typography>\r\n        <Grid container\r\n          justify='space-evenly'\r\n          flexwrap='wrap'>\r\n          {props.keywords.map((keyword, index) => {\r\n            return (\r\n              <Grid style={{ margin: '0.2rem' }} key={index} item>\r\n                <Chip label={keyword} />\r\n              </Grid>\r\n\r\n            )\r\n          })}\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions style={{ 'justify-content': 'flex-end' }}>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          href={props.demoUrl}\r\n          target=\"_blank\"\r\n          disabled={props.demoUrl === ''}\r\n        >\r\n          Demo\r\n                </Button>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          href={props.codeUrl}\r\n          target=\"_blank\"\r\n        >\r\n          Code\r\n        </Button>\r\n      </CardActions>\r\n    </Card >\r\n  )\r\n}\r\nexport { ProjectCard }","import React, { useContext } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { StoreContext } from './Store';\r\nimport { ProjectCard } from './ProjectCard';\r\n\r\nconst Projects = (props) => {\r\n  const context = useContext(StoreContext);\r\n  return (\r\n    <div style={{ padding: 10 }}>\r\n      <Grid container spacing={5}>\r\n        {context.data[context.language].projects.map((project, index) => {\r\n          return (\r\n            <Grid item xs={12} sm={6} md={4} align=\"center\" key={index}>\r\n              <ProjectCard\r\n                title={project.title}\r\n                description={project.summary}\r\n                imgUrl={project.img}\r\n                demoUrl={project.demo}\r\n                codeUrl={project.code}\r\n                keywords={project.keywords} />\r\n            </Grid>\r\n          )\r\n        })}\r\n      </Grid>\r\n    </div >\r\n  )\r\n}\r\nexport { Projects }","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\n\r\nexport { TabPanel }","const formatDate = (date) => {\r\n  if (date === 'now') {\r\n    return 'now'\r\n  }\r\n  const options = { year: 'numeric', month: 'long' };\r\n  const dateObj = new Date(date)\r\n  const string = dateObj.toLocaleDateString('en-EN', options)\r\n\r\n  return string\r\n}\r\n\r\nexport { formatDate }","import React, { useContext } from 'react';\r\nimport { Grid, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Typography, makeStyles, List, ListItem } from '@material-ui/core';\r\nimport { StoreContext } from './Store';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { formatDate } from './formatDate'\r\n\r\nconst useStyles = makeStyles({\r\n  summary: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n\r\n  },\r\n});\r\n\r\nconst Education = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n  const classes = useStyles();\r\n  const context = useContext(StoreContext);\r\n  return (\r\n    <div style={{ padding: 20 }}\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      {...other}>\r\n      <Grid container spacing={10}>\r\n        {value === index && (\r\n\r\n          context.data[context.language].education.map((school, index) => {\r\n            return (\r\n              <Grid item xs={12} align=\"center\" key={index}>\r\n                <ExpansionPanel>\r\n                  <ExpansionPanelSummary\r\n                    classes={{ content: classes.summary }}\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                  >\r\n                    <Typography\r\n                      className={''}\r\n                      variant={'overline'}\r\n                    >{formatDate(school.startDate) + ' - ' + formatDate(school.endDate)}\r\n                    </Typography>\r\n                    <Typography\r\n                      className={''}\r\n                      variant={'h5'}\r\n                    >{school.area}\r\n                    </Typography>\r\n                    <Typography\r\n                      className={''}\r\n                      variant={'subtitle1'}\r\n                    >\r\n                      {school.studyType}\r\n                    </Typography>\r\n                  </ExpansionPanelSummary>\r\n                  <ExpansionPanelDetails\r\n                    className={classes.summary}\r\n                  >\r\n                    <Typography variant=\"overline\">\r\n                      {school.institution}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      align=\"justify\"\r\n                    >\r\n                      {school.desc}\r\n                    </Typography>\r\n                    <List>\r\n                      {school.courses.map((point, index) => {\r\n                        return (<ListItem key={index}>\r\n                          {point}\r\n                        </ListItem>)\r\n                      })}\r\n                    </List>\r\n                  </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n              </Grid>\r\n            )\r\n          })\r\n        )}\r\n      </Grid>\r\n\r\n    </div >\r\n  )\r\n}\r\nexport { Education }","\r\nimport React, { useContext } from 'react';\r\nimport { Grid, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Typography, makeStyles, List, ListItem } from '@material-ui/core';\r\nimport { StoreContext } from './Store';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { formatDate } from './formatDate'\r\nconst useStyles = makeStyles({\r\n  summary: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n  },\r\n  expanded: {\r\n    marginBottom: 0\r\n  }\r\n});\r\n\r\nconst Experience = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n  const classes = useStyles();\r\n  const context = useContext(StoreContext);\r\n  return (\r\n    <div style={{ padding: 20 }}\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      {...other}>\r\n      <Grid container spacing={10}>\r\n        {value === index && (\r\n\r\n          context.data[context.language].work.map((job, index) => {\r\n            return (\r\n              <Grid item xs={12} align=\"center\" key={index}>\r\n                <ExpansionPanel>\r\n                  <ExpansionPanelSummary\r\n                    classes={{ content: classes.summary }}\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n\r\n                  >\r\n                    <Typography\r\n                      className={''}\r\n                      variant={'overline'}\r\n                    >{formatDate(job.startDate) + ' - ' + formatDate(job.endDate)}\r\n                    </Typography>\r\n                    <Typography\r\n                      className={''}\r\n                      variant={'h5'}\r\n                    >{job.position}\r\n                    </Typography>\r\n                    <Typography\r\n                      className={''}\r\n                      variant={'subtitle1'}\r\n                    >\r\n                      {job.company}\r\n                    </Typography>\r\n                  </ExpansionPanelSummary>\r\n                  <ExpansionPanelDetails\r\n                    className={classes.summary}\r\n                  >\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      align=\"justify\"\r\n                    >\r\n                      {job.summary}\r\n                    </Typography>\r\n                    <List>\r\n                      {job.highlights.map((point, index) => {\r\n                        return (<ListItem key={index}>\r\n                          {point}\r\n                        </ListItem>)\r\n                      })}\r\n                    </List>\r\n                  </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n              </Grid>\r\n            )\r\n          })\r\n        )}\r\n      </Grid>\r\n\r\n    </div >\r\n  )\r\n}\r\nexport { Experience }","import React, { useState, useContext } from 'react';\r\nimport { Paper, Tabs, Tab, useTheme, Container } from '@material-ui/core';\r\n// import { makeStyles } from '@material-ui/core';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\n// import LinkIcon from '@material-ui/icons/Link';\r\n// import GitHubIcon from '@material-ui/icons/GitHub';\r\n// import PaletteIcon from '@material-ui/icons/Palette';\r\n// import HomeIcon from '@material-ui/icons/Home';\r\n// import LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport { StoreContext } from './Store';\r\nimport { styles } from './styles';\r\nimport { Projects } from './Projects'\r\nimport { TabPanel } from './TabPanel';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { Education } from './Education';\r\nimport { Experience } from './Experience';\r\n\r\n\r\nconst TabsInfo = () => {\r\n  const context = useContext(StoreContext)\r\n  const classes = styles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = useState(0);\r\n  const colors = ['#e91e63', '#0097a7', '#2196f3', '#fdd835']\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    context.setPrimaryColor(colors[newValue])\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n    context.setPrimaryColor(colors[index])\r\n\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" style={{ padding: 0 }}>\r\n\r\n      <Paper square className={classes.root}>\r\n        <Tabs\r\n          // className={classes.root}\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n\r\n        >\r\n          <Tab icon={<CodeIcon />} label=\"Projects\" />\r\n          <Tab icon={<SchoolIcon />} label=\"Education\" />\r\n          <Tab icon={<WorkIcon />} label=\"Experience\" />\r\n          {/* <Tab icon={<PaletteIcon />} label=\"Skills\" /> */}\r\n        </Tabs>\r\n\r\n        <SwipeableViews\r\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n          index={value}\r\n          onChangeIndex={handleChangeIndex}\r\n        >\r\n\r\n          <TabPanel value={value} index={0} dir={theme.direction}>\r\n            <Projects />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1} dir={theme.direction}>\r\n            <Education />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={2} dir={theme.direction}>\r\n            <Experience />\r\n          </TabPanel>\r\n          {/* <TabPanel value={value} index={3} dir={theme.direction}>\r\n\r\n                </TabPanel> */}\r\n        </SwipeableViews>\r\n\r\n      </Paper >\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport { TabsInfo }","import React, { useContext } from 'react';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { StoreContext } from './Store';\r\n\r\nconst ModeSwitch = () => {\r\n  const context = useContext(StoreContext)\r\n\r\n\r\n  const handleChange = (event) => {\r\n    context.setDarkMode(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={<Switch checked={context.darkMode} onChange={handleChange} name=\"dark\" />}\r\n        label=\"Dark mode\"\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\nexport { ModeSwitch }","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { MainInfo } from './MainInfo';\nimport { TabsInfo } from './TabsInfo';\nimport { CssBaseline, useMediaQuery, Grid } from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { StoreContext } from './Store';\nimport { Theme } from './Theme';\n// import { styles } from './styles';\nimport { ModeSwitch } from './ModeSwitch';\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [data, setData] = useState({});\n  const [language, setLanguage] = useState('en');\n  const [darkMode, setDarkMode] = useState(false);\n  const [primaryColor, setPrimaryColor] = useState('#e91e63');\n\n  // const classes = styles;\n  const theme = Theme(darkMode, primaryColor);\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');   // check prefered user mode \n\n  useEffect(() => {\n    setDarkMode(prefersDarkMode)\n\n    fetch(\"/cv/db.json\")\n      // fetch(\"http://localhost:3333/data\")\n      .then(response => response.json())\n      .then(\n        (result) => {\n          setData(result);\n          setIsLoaded(true);\n        },\n        (error) => {\n          setError(error);\n          setIsLoaded(true);\n        }\n      )\n  }, [prefersDarkMode])\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <React.Fragment>\n        <StoreContext.Provider\n          value={{ data, language, darkMode, setDarkMode, setLanguage, setPrimaryColor }}>\n          <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Container fixed>\n              <Grid container spacing={5}>\n                <Grid item>\n                  <MainInfo />\n                </Grid>\n                <Grid item style={{ width: '100%' }}>\n                  <TabsInfo />\n                </Grid>\n              </Grid>\n              <ModeSwitch />\n            </Container>\n          </ThemeProvider>\n        </StoreContext.Provider>\n      </React.Fragment>\n\n\n    )\n  }\n}\n\n\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core\"\r\nimport { useMemo } from \"react\"\r\n\r\nconst Theme = (prefersDarkMode, primary) => useMemo(\r\n    () =>\r\n        createMuiTheme({\r\n            palette: {\r\n                type: prefersDarkMode ? 'dark' : 'light',\r\n                primary: {\r\n                    main: primary, //'#e91e63'\r\n                },\r\n                secondary: {\r\n                    main: '#2962ff',\r\n                },\r\n                tonalOffset: 0.2,\r\n\r\n\r\n\r\n\r\n            },\r\n        }), [prefersDarkMode, primary],\r\n);\r\n\r\nexport { Theme }\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}